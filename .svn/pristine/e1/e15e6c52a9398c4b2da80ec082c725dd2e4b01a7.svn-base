package com.desksoft.wechat.common.config;

import com.desksoft.wechat.controller.IndexController;
import com.desksoft.wechat.controller.user.UserController;
import com.jfinal.config.Constants;
import com.jfinal.config.Handlers;
import com.jfinal.config.Interceptors;
import com.jfinal.config.JFinalConfig;
import com.jfinal.config.Plugins;
import com.jfinal.config.Routes;
import com.jfinal.core.JFinal;
import com.jfinal.kit.PropKit;
import com.jfinal.plugin.activerecord.ActiveRecordPlugin;
import com.jfinal.plugin.c3p0.C3p0Plugin;
import com.jfinal.render.FreeMarkerRender;

import freemarker.template.TemplateModelException;

/**
 * JfinalWechatConfig 核心部分
 * @author joker
 *
 */
public class JfinalWechatConfig extends JFinalConfig {


	@Override
	public void configConstant(Constants me) {
		// 加载少量必要配置，随后可用PropKit.get(...)获取值
		PropKit.use("jfinal_config.txt");
		me.setDevMode(PropKit.getBoolean("devMode", true));
		me.setBaseViewPath("/pages");
		me.setEncoding("UTF-8");
		me.setError404View("/pages/admin/admin-404.html");
	}
	
	
	/**
	 * 配置路由
	 */
	public void configRoute(Routes me) {
		me.add("/", IndexController.class,"/index");	// 第三个参数为该Controller的视图存放路径
		me.add("/user", UserController.class);			// 第三个参数省略时默认与第一个参数值相同，在此即为 "/blog"
	}
	
	public static C3p0Plugin createC3p0Plugin() {
		return new C3p0Plugin(PropKit.get("jdbcUrl"), PropKit.get("user"), PropKit.get("password").trim());
	}
	
	/**
	 * 配置插件
	 */
	public void configPlugin(Plugins me) {
		// 配置C3p0数据库连接池插件
		C3p0Plugin C3p0Plugin = createC3p0Plugin();
		me.add(C3p0Plugin);
		
		// 配置ActiveRecord插件
		ActiveRecordPlugin arp = new ActiveRecordPlugin(C3p0Plugin);
		me.add(arp);
		
		// 所有配置在 MappingKit 中搞定
		_MappingKit.mapping(arp);
	}
	
	/**
	 * 配置全局拦截器
	 */
	public void configInterceptor(Interceptors me) {
		
	}
	
	/**
	 * 配置处理器
	 */
	public void configHandler(Handlers me) {
		
	}
	
	/**
	 * 配置全局变量
	 */
	public void afterJFinalStart(){
		
		//fm 的全局变量
	/*	String devType = PropKit.get("devType");
		String CONTEXT_PATH = "";
		if(StringUtils.isNotBlank(devType)){
			if("dev".equalsIgnoreCase(devType))
				CONTEXT_PATH = PropKit.get("CONTEXT_PATH_DEV");
			else if("test".equalsIgnoreCase(devType))
				CONTEXT_PATH = PropKit.get("CONTEXT_PATH_TEST");
			else if("online".equalsIgnoreCase(devType))
				CONTEXT_PATH = PropKit.get("CONTEXT_PATH_ONLINE");
		}*/
	    try {
	    	System.out.println(JFinal.me().getContextPath());
			FreeMarkerRender.getConfiguration().setSharedVariable("CONTEXT_PATH", JFinal.me().getContextPath());
		} catch (TemplateModelException e) {
			e.printStackTrace();
		}
	 }
	
	
	/**
	 * 运行此 main 方法可以启动项目，此main方法可以放置在任意的Class类定义中，不一定要放于此
	 */
	/*public static void main(String[] args) {
		JFinal.start("src/main/webapp", 80, "/", 5);
	}*/

}
