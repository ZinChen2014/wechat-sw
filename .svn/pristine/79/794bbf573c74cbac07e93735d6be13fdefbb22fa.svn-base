package com.desksoft.wechat.controller.microMsg;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.RandomUtils;

import com.desksoft.wechat.common.model.UserBindFlow;
import com.desksoft.wechat.controller.admin.BaseController;
import com.desksoft.wechat.utils.RandomUtil;
import com.jfinal.kit.StrKit;


/**
 * 我的用水 缴费 预存
 * @author Joker
 *
 */
public class MyUserWaterController extends BaseController {
	
//TODO 需要接口
	/**
	 * 加载我的用水列表
	 */
	public void getUsedWaterList(){
		String openId = getPara("openId",null);
		if(StringUtils.isNotBlank(openId)){
		//	setAttr("openID", openId);
			List<Map<String,Object>> rlist = new ArrayList<Map<String,Object>>();
			List<UserBindFlow> list = UserBindFlow.me.selectBindingUserList(openId);
			
			for(UserBindFlow userBindFlow:list){
				 //TODO 调用 水务接口，根据openID，找到绑定的所有户号，每个户号去调用接口
				//Integer userNo = userBindFlow.getUserNo();
				//假设调用接口，返回用水信息usedList
				List<Map<String,String>> usedList = new ArrayList<Map<String,String>>();
				Map<String,String> wtMap = new HashMap<String,String>();
				wtMap.put("month", "201512");//月份
				wtMap.put("ago", "110");//上期数
				wtMap.put("now", "120");//本期数
				wtMap.put("real", "120");//实抄数
				wtMap.put("should", "120");//应收数
				wtMap.put("fee", "120");//金额
				wtMap.put("fund", "120");//违约金
				wtMap.put("isPay", "1");//是否缴费1,0
				Map<String,String> wtMap2 = new HashMap<String,String>();
				wtMap2.put("month", "201511");//月份
				wtMap2.put("ago", "110");//上期数
				wtMap2.put("now", "120");//本期数
				wtMap2.put("real", "120");//实抄数
				wtMap2.put("should", "120");//应收数
				wtMap2.put("fee", "120");//金额
				wtMap2.put("fund", "120");//违约金
				wtMap2.put("isPay", "1");//是否缴费1,0
				usedList.add(wtMap2);
				usedList.add(wtMap);
				Map<String,Object> map = new HashMap<String,Object>();
				//绑定人信息
				if(StrKit.isBlank(userBindFlow.getUserName())){
					userBindFlow.setUserName("路人甲"+RandomUtil.getRandomString(4));
				}
				if(StrKit.isBlank(userBindFlow.getAddress())){
					userBindFlow.setAddress("东北路"+RandomUtil.getRandomString(4));
				}
				map.put("userBindFlow", userBindFlow);
				//该用户用水信息
				map.put("usedList", usedList);
				rlist.add(map);
			}
			
			if(list.size()>0){
				setAttr("objList", rlist);
				render("myUsedWater.html");
			}else{
				render("addUser.html");
			}
				
		}else{
			renderText("非法URL");
		}
		
	}
	
	/**
	 * 缴费 openId查询该用户对应的户号List，依次预存查看
	 */
	public void payWater(){
		String openId = getPara("openId",null);
		if(StringUtils.isNotBlank(openId)){
			//setAttr("openID", openId);
			List<Map<String,Object>> rlist = new ArrayList<Map<String,Object>>();
			List<UserBindFlow> list = UserBindFlow.me.selectBindingUserList(openId);
			int i=0;
			for(UserBindFlow userBindFlow:list){
				 //TODO 调用 水务接口，根据openID，找到绑定的所有户号，每个户号去调用接口,返回每个用户的欠费情况
				//Integer userNo = userBindFlow.getUserNo();
				//假设调用接口，返回用水信息wtMap和一个状态值status:1不欠费，0欠费，欠费就有一个wtMap
				Map<String,Object> map = new HashMap<String,Object>();
				if(i==0){
					Map<String,String> wtMap = new HashMap<String,String>();
					wtMap.put("num", "12");//笔数
					wtMap.put("waterFee", "110");//水费
					wtMap.put("fund", "12");//违约金
					wtMap.put("total", "133");//总金额
					map.put("wtMap", wtMap);
					map.put("status", 0);
				}else{
					map.put("status", 1);
				}
				//绑定人信息
				if(StrKit.isBlank(userBindFlow.getUserName())){
					userBindFlow.setUserName("路人甲"+RandomUtil.getRandomString(4));
				}
				if(StrKit.isBlank(userBindFlow.getAddress())){
					userBindFlow.setAddress("东北路"+RandomUtil.getRandomString(4));
				}
				map.put("userBindFlow", userBindFlow);
				//该用户用水信息
				rlist.add(map);
				i++;
			}
			
			if(list.size()>0){
				setAttr("objList", rlist);
				render("payWater.html");
			}else{
				render("addUser.html");
			}
				
		}else{
			renderText("非法URL");
		}
		
	}
	/**
	 * 水费预存 openId查询该用户对应的户号List，依次预存查看
	 */
	public void rePayWater(){
		String openId = getPara("openId",null);
		if(StringUtils.isNotBlank(openId)){
			List<UserBindFlow> list = UserBindFlow.me.selectBindingUserList(openId);
			int i=0;
			for(UserBindFlow userBindFlow:list){
				 //TODO 调用 水务接口，根据openID，找到绑定的所有户号，每个户号去调用接口,返回每个用户的预存信息
				 //TODO 把预存金额，存入本地预存费用
				//Integer userNo = userBindFlow.getUserNo();
				//假设调用接口，返回用水信息预存款 失败给remark赋值
				if(i==0){
					long rePayFee = 88;
					//该用户用水信息预存款
					userBindFlow.setRePayFee(rePayFee);
					userBindFlow.setRemark("1");
				}else{
					userBindFlow.setRemark("0");
				}
				
				i++;
			}
			
			if(list.size()>0){
				setAttr("objList", list);
				render("rePayWater.html");
			}else{
				render("addUser.html");
			}
				
		}else{
			renderText("非法URL");
		}
	}
	
}
